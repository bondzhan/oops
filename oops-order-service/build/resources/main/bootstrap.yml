
server:
  port: 8802

# Eureka
eureka:
  instance:
    # 是否用ip注册
    prefer-ip-address: true
    # 实例id
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    # 服务调用的ip地址
    ip-address: ${spring.cloud.client.ip-address}
    # 重定义/actuator，处理context-path
    health-check-url: http://${spring.cloud.client.ip-address}:${server.port}${server.servlet.context-path:}/actuator/health
    status-page-url: http://${spring.cloud.client.ip-address}:${server.port}${server.servlet.context-path:}/actuator/info
    home-page-url: http://${spring.cloud.client.ip-address}:${server.port}${server.servlet.context-path:}/
  client:
    serviceUrl:
      defaultZone: http://localhost:8571/eureka/

# 从Eureka中找到Config服务并读取配置
spring:
  application:
    # 配置名称, 注意顺序：后面配置的相同内容部分会替换前面的配置
    # common_*要排在前面
    name: oops-order-service
  # 允许覆盖Bean实例
  main:
    allow-bean-definition-overriding: true

  datasource:
    url: jdbc:mysql://192.168.0.208:3306/bbc?useAffectedRows=true&rewriteBatchedStatements=true&allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
    username: root
    password: U4hwhgtnJs
    driver-class-name: com.mysql.cj.jdbc.Driver
#  cloud:
#    config:
#      discovery:
#        enabled: true
#        service-id: xybbc-config-service
#      label: k8s-dev
#      profile: dev
#      retry:
#        initial-interval: 1000
#        max-attempts: 6
#        max-interval: 2000
#        multiplier: 1.1

